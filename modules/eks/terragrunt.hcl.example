include "root" {
  path = find_in_parent_folders()
}

include "general" {
  path = "${dirname(find_in_parent_folders())}/_envcommon/_general.hcl"
  expose = true
}

terraform {
  source = "${include.general.locals.eks.base_source_url}${include.general.locals.eks.base_source_version}"
}

locals {
  admin_arns = [
    "arn:aws:iam::${include.general.locals.cloud.aws_account_id}:role/AssumableRoleForAdmins",
    "arn:aws:iam::${include.general.locals.cloud.aws_account_id}:role/AssumableRoleForDevelopers",
    "arn:aws:iam::${include.general.locals.cloud.aws_account_id}:role/OrganizationAccountAccessRole"
  ]
}

dependency "vpc" {
  config_path = "../01-vpc"
}

dependency "admin_role" {
  config_path = "../../../common/aws/iam-admin-role/"
}

dependency "route53" {
  config_path = "../../_common/05-route53-zones/"
}

inputs = {
  name            = include.general.locals.env.name
  cluster_version = "1.30"
  vpc_id          = dependency.vpc.outputs.vpc_id

  private_subnets = dependency.vpc.outputs.private_subnets
  public_subnets  = dependency.vpc.outputs.public_subnets

  admin_role_arns        = local.admin_arns
  kms_key_owners         = local.admin_arns
  kms_key_administrators = local.admin_arns #STUB

  reg-cluster-in-argocd             = true
  argocd_deployer_role_arn          = "arn:aws:iam::509399637899:role/argocd-main"
  argocd_project_mapping_oidc_admin = ["infra-admin"]
  argocd_project_mapping_oidc_dev   = ["development"]

  external_dns_hosted_zone_arns = [
    dependency.route53.outputs.route53_zone_zone_arn["dev.bugbusters.vip"]
  ]

  node_groups = {
    main = {
      disk_size      = 100
      min_size       = 10
      max_size       = 15
      desired_size   = 10
      instance_types = ["c5.xlarge"]

      autoscaling_policy = {
        attach_ram_policy = true #cloudwatch agent must be installed
        attach_cpu_policy = true

        custom_policy = {
          avg-cpu-policy-greater-than-50 = {
            policy_type               = "TargetTrackingScaling"
            estimated_instance_warmup = 1200
            target_tracking_configuration = {
              predefined_metric_specification = {
                predefined_metric_type = "ASGAverageCPUUtilization"
              }
              target_value = 50.0
            }
          },
          predictive-scaling = {
            policy_type = "PredictiveScaling"
            predictive_scaling_configuration = {
              mode                         = "ForecastAndScale"
              scheduling_buffer_time       = 10
              max_capacity_breach_behavior = "IncreaseMaxCapacity"
              max_capacity_buffer          = 10
              metric_specification = {
                target_value = 32
                predefined_scaling_metric_specification = {
                  predefined_metric_type = "ASGAverageCPUUtilization"
                  resource_label         = "testLabel"
                }
                predefined_load_metric_specification = {
                  predefined_metric_type = "ASGTotalCPUUtilization"
                  resource_label         = "testLabel"
                }
              }
            }
          }
        }
      }
    },
    infra = {
      disk_size      = 100
      min_size       = 3
      max_size       = 3
      desired_size   = 3
      instance_types = ["c5.xlarge"]

      taints = [
        {
          key    = "workloadKind"
          value  = "infra"
          effect = "NO_SCHEDULE"
        }
      ]
    }
  }

  tags = include.general.locals.env.tags
}

